from tkinter import *
from tkinter.messagebox import *
import datetime as dt
import sqlite3
class Bus:
    def front_page(self):
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file ="starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root,text="NAME : PRIYANSH SAXENA",font="times 15 bold",fg="blue").place(x=650,y=350)
        Label(root,text="ER. No. : 221B280",font="times 15 bold",fg="blue").place(x=690,y=400)
        Label(root,text="MOBILE. No. : 7999689951",font="times 15 bold",fg="blue").place(x=650,y=450)
        Label(root,text='SUBMITTED TO: DR. MAHESH KUMAR',fg='red',bg="light blue",font='Calibri 20').place(x=580,y=500)
        Label(root,text="PROJECT BASED LEARNING",font="times 15 bold",fg="RED").place(x=650,y=550)
        Label(root,text="PRESS ANY KEY",font="times 15 bold",fg="RED").place(x=1200,y=800)
        def fun(e=0):
            root.destroy()
            self.main_page()
        root.bind("<KeyPress>",fun)
        root.mainloop()
        
    def main_page(self):
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        def seat(e=0):
            root.destroy()
            self.seat_booking()
        Button(root,text='Seat Booking',command=seat,bg='green1',fg='black',font='Calibri 30').place(x=50, y=500)
        def check():
            root.destroy()
            self.check_booked_seat()
        Button(root,text='Check Booked Seat',command=check,bg='green3',fg='black',font='Calibri 30').place(x=500, y=498)
        def add():
            root.destroy()
            self.add_bus()
        Button(root,text='Add Bus Details',command=add,bg='green4',fg='black',font='Calibri 30').place(x=1000, y=495)
        Label(root,text='Only For Admin',fg='red',font='Calibri 15').place(x=1050, y=600)
        root.mainloop()
    def seat_booking(self):
        from tkcalendar import DateEntry
        import datetime as dt
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').place(x=450,y=270)
        Label(root,text='From ').place(x=340,y=350)
        e6=Entry(root)
        e6.place(x=380,y=350)
        Label(root,text='To ').place(x=520,y=350)
        e7=Entry(root)
        e7.place(x=570,y=350)
        Label(root,text='Date ').place(x=720,y=350)
        e8=Entry(root)
        e8.place(x=780,y=350)
        def Proceed_To_Book():
            Label(root,text='Fill Passenger Detail To Book The Seat',fg='red',bg="light blue",font='times 15 bold').place(x=460,y=600)
            Label(root,text="Name").place(x=220,y=650)
            e1=Entry(root)
            e1.place(x=260,y=650)
            Label(root,text="Gender").place(x=400,y=650)
            e2=StringVar()
            option=["   male  ","   female  ","  transgender"]
            OptionMenu(root,e2,*option).place(x=450,y=650)
            Label(root,text="No. Of Seats").place(x=590,y=650)
            e3=Entry(root)
            e3.place(x=660,y=650)
            Label(root,text="Mobile No.").place(x=740,y=650)
            e4=Entry(root)
            e4.place(x=810,y=650)
            Label(root,text="Age").place(x=920,y=650)
            e5=Entry(root)
            e5.place(x=950,y=650)
            def fun(e=0):
                root.destroy()
                self.ticket_booked()
            def book_seat():
                e88=e4.get()
                if(len(e88)!=10):
                    showerror("error","insert correct number")
                else:
                    c=askyesno("fare Confirm","confirm ticket")
                    if c==True:
                        cur.execute("create table if not exists ticket(name varchar(20),gender varchar(10),seats int,mobile_no int,age int,travel_date date,boarding_point varchar(20),final_point varchar(20))")
                        cur.execute("insert into ticket values (?,?,?,?,?,?,?,?)",(str(e1.get()),str(e2.get()),int(e3.get()),int(e4.get()),int(e5.get()),str(e8.get_date()),str(e6.get()),str(e7.get())))
                        con.commit()
                        fun()
                    else:
                        pass
            Button(root,text="BOOK",command=book_seat,bg="green",relief='raised',font='times 10 ').place(x=1100,y=650)
        def show_bus():
            Label(root,text="Select Bus",fg="green",font="times 15 bold").place(x=240,y=380)
            Label(root,text="Operator",fg="green",font="times 15 bold").place(x=400,y=380)
            Label(root,text="Bus Type",fg="green",font="times 15 bold").place(x=550,y=380)
            Label(root,text="Capacity",fg="green",font="times 15 bold").place(x=700,y=380)
            Label(root,text="Fare",fg="green",font="times 15 bold").place(x=840,y=380)
            #cur.execute("select running_date from bus inner join run on run.bus_id=bus.bus_id inner join route on bus.route_id=route.route_id")   
            cur.execute(f"select name from bus inner join emp on bus.opertror_id=emp.operator_id inner join route on bus.route_id=route.route_id  and station_name = '{(e6.get())}'")
            items = cur.fetchall() 
            
            z=420
            i=1
            for item in items:
                Label(root,text=item,font='times 11 bold').place(x=400,y=z)
                Button(root,text=f"Bus {i}",command=show_bus,bg="green",relief='raised',font='times 10 ').place(x=250,y=z)
                i=i+1
                        
                Button(root,text=f"Proceed To Book",command=Proceed_To_Book,bg="green",relief='raised',font='times 10 ').place(x=900,y=z)
                z=z+40   
            con.commit()
            z=420
            
            cur.execute(f"select bus_type from bus inner join route on bus.route_id=route.route_id and station_name = '{(e6.get())}'")
            items2=cur.fetchall() 
            for item in items2:
                Label(root,text=item,font='times 11 bold').place(x=550,y=z)
                z=z+40
            con.commit()
            z=420
            
            cur.execute(f"select  capacity from bus inner join route on bus.route_id=route.route_id and station_name = '{(e6.get())}'")
            items3=cur.fetchall()
            for item in items3:
                Label(root,text=item,font='times 11 bold').place(x=700,y=z)
                z=z+40
            con.commit()
            z=420
            cur.execute(f"select fare from bus inner join route on bus.route_id=route.route_id and station_name = '{(e6.get())}'")
            item4=cur.fetchall()
        
            for item in item4:
                Label(root,text=item,font='times 11 bold').place(x=840,y=z)
                z=z+40
            con.commit()
        
           
        def fun():
            root.destroy()
            self.main_page()
        Button(root,text="SHOW",command=show_bus,bg="green",relief='raised',font='times 10 ').place(x=900,y=350)
        Button(root,text="HOME",command=fun,bg="green",font='times 10').place(x=970,y=350)
        root.mainloop()
    def ticket_booked(self):
        from tkcalendar import DateEntry
        import datetime as dt
        date00 = dt.datetime.now()
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root, text="BUS TICKET",font="times 15 bold").pack()
        cur.execute("select name from ticket order by rowid desc LIMIT 1")
        Label(root,text="Passenger",font="times 15 bold",fg="green").place(x=470,y=400)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=570,y=400)
        cur.execute("select gender from ticket order by rowid desc LIMIT 1")
        Label(root,text="Gender",font="times 15 bold",fg="green").place(x=740,y=400)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=820,y=400)
        cur.execute("select seats from ticket order by rowid desc LIMIT 1")
        Label(root,text="No. Of Seats",font="times 15 bold",fg="green").place(x=470,y=450)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=590,y=450)
        cur.execute("select mobile_no from ticket order by rowid desc LIMIT 1")
        Label(root,text="Phone no.",font="times 15 bold",fg="green").place(x=740,y=450)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=840,y=450)
        cur.execute("select age from ticket order by rowid desc LIMIT 1")
        Label(root,text="Age",font="times 15 bold",fg="green").place(x=470,y=500)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=590,y=500)
        cur.execute("select travel_date from ticket order by rowid desc LIMIT 1")
        Label(root,text="Travel On",font="times 15 bold",fg="green").place(x=470,y=550)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=570,y=550)
        Label(root,text="Booked On",font="times 15 bold",fg="green").place(x=740,y=550)
        Label(root,text=f"{date00:%A, %B %d, %Y}",font="times 15 bold").place(x=850,y=550)
        cur.execute("select boarding_point from ticket order by rowid desc LIMIT 1")
        Label(root,text="From",font="times 15 bold",fg="green").place(x=470,y=600)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=570,y=600)
        cur.execute("select final_point from ticket order by rowid desc LIMIT 1")
        Label(root,text="To",font="times 15 bold",fg="green").place(x=740,y=600)
        Label(root,text=cur.fetchall(),font="times 15 bold").place(x=850,y=600)
        def fun(e=0):
            root.destroy()
            self.main_page()
        Button(root,text="HOME",command=fun,bg="green",font='times 10').place(x=1000,y=600)
        root.mainloop()
    def check_booked_seat(self):
        from tkcalendar import DateEntry
        import datetime as dt
        import sqlite3
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root, text="Check Booked Ticket",font="times 15 bold").pack()
        Label(root,text="Enter The Mobile Number",font="times 15 bold",fg="green").place(x=500,y=365)
        c=Entry(root)
        c.place(x=750,y=370)
        def check_seat():

            cur.execute(f"select name from ticket where mobile_no ={c.get()} order by rowid desc LIMIT 1")
            Label(root,text="Passenger",font="times 15 bold",fg="green").place(x=470,y=400)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=570,y=400)
            cur.execute(f"select gender from ticket where mobile_no ={c.get()} order by rowid desc LIMIT 1")
            Label(root,text="Gender",font="times 15 bold",fg="green").place(x=740,y=400)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=820,y=400)
            cur.execute(f"select seats from ticket where mobile_no ={c.get()}  order by rowid desc LIMIT 1")
            Label(root,text="No. Of Seats",font="times 15 bold",fg="green").place(x=470,y=450)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=590,y=450)
            cur.execute(f"select mobile_no from ticket where mobile_no ={c.get()}  order by rowid desc LIMIT 1")
            Label(root,text="Phone no.",font="times 15 bold",fg="green").place(x=740,y=450)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=840,y=450)
            cur.execute(f"select age from ticket where mobile_no ={c.get()}  order  by rowid desc LIMIT 1")
            Label(root,text="Age",font="times 15 bold",fg="green").place(x=470,y=500)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=590,y=500)
            cur.execute(f"select gender from ticket where mobile_no ={c.get()}  order by rowid desc LIMIT 1")
            Label(root,text="Bus Detail",font="times 15 bold",fg="green").place(x=740,y=500)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=850,y=500)
            cur.execute(f"select travel_date from ticket where mobile_no ={c.get()}  order by rowid desc LIMIT 1")
            Label(root,text="Travel On",font="times 15 bold",fg="green").place(x=470,y=550)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=570,y=550)
            date = dt.datetime.now()
            Label(root,text="Booked On",font="times 15 bold",fg="green").place(x=740,y=550)
            Label(root,text=f"{date:%A, %B %d, %Y}",font="times 15 bold").place(x=850,y=550)
            cur.execute(f"select boarding_point from ticket where mobile_no ={c.get()}  order by rowid desc LIMIT 1")
            Label(root,text="From",font="times 15 bold",fg="green").place(x=470,y=600)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=570,y=600)
            cur.execute(f"select final_point from ticket where mobile_no ={c.get()}  order by rowid desc LIMIT 1")
            Label(root,text="To",font="times 15 bold",fg="green").place(x=740,y=600)
            Label(root,text=cur.fetchall(),font="times 15 bold").place(x=850,y=600)
        def fun():
            root.destroy()
            self.main_page()
        Button(root,text="Show",command=check_seat,bg="green",relief='raised',font='times 10 ').place(x=900,y=370)
        Button(root,text="HOME",command=fun,bg="green",font='times 10').place(x=950,y=370)
        root.mainloop()
    def add_bus(self):
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        def new_bus1():
            root.destroy()
            self.new_bus()
        def new_operator1():
            root.destroy()
            self.new_operator()
        def new_route1():
            root.destroy()
            self.new_route()
        def new_run1():
            root.destroy()
            self.new_run()

        def fun():
            root.destroy()
            self.main_page()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 20').pack()
        Button(root,text="New Bus",command=new_bus1,bg="green",relief='raised',font='times 20').place(x=340,y=350)
        Button(root,text="New Operator",bg="green",command=new_operator1,relief='raised',font='times 20').place(x=510,y=350)
        Button(root,text="New Route",command=new_route1,bg="green",relief='raised',font='times 20').place(x=690,y=350)
        Button(root,text="New Run",command=new_run1,bg="green",relief='raised',font='times 20').place(x=870,y=350)
        Button(root,text="HOME",bg="green",command=fun,font='times 12').place(x=1020,y=360)
        root.mainloop()
    def new_bus(self):
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root,text='Add Bus Details',fg='green',font='Calibri 20').pack()
        def add():
            showinfo("BUS ENTRY","BUS ENTRY ADDED")
            cur.execute("create table if not exists bus(bus_id int,bus_type varchar(20) ,capacity int,fare int,opertror_id int,route_id int,primary key(bus_id))")
            cur.execute("insert into bus values (?,?,?,?,?,?)",(int(e11.get()),str(e12.get()),int(e13.get()),int(e14.get()),int(e15.get()),int(e16.get()))) 
            con.commit()
        def show():
            Label(root,text="ALL BUS DETAILS",bg="red",fg="green",font='times 11 bold').place(x=650,y=600)
            cur.execute("select * from bus")
            Label(root,text=cur.fetchall(),font='Calibri 10').place(x=00,y=650)
        Label(root,text='Bus Id',font='times 11 bold').place(x=80,y=400)
        e11=Entry(root)
        e11.place(x=135,y=400)
        Label(root,text='Bus Type',font='times 11 bold').place(x=270,y=400)
        e12=StringVar()
        option=["   2x2 ac   ","   2x2 non ac  ","  3x2 ac  ","  3x2 non ac  "]
        OptionMenu(root,e12,*option).place(x=350,y=400)
        Label(root,text='Capacity',font='times 11 bold').place(x=470,y=400)
        e13=Entry(root)
        e13.place(x=535,y=400)
        Label(root,text='Fare RS.',font='times 11 bold').place(x=660,y=400)
        e14=Entry(root)
        e14.place(x=720,y=400)
        Label(root,text='Operator ID',font='times 11 bold').place(x=825,y=400)
        e15=Entry(root)
        e15.place(x=920,y=400)
        Label(root,text='Route ID',font='times 11 bold').place(x=1005,y=400)
        e16=Entry(root)
        e16.place(x=1075,y=400)
        def add2():
                cur.execute(f"delete from bus where bus_id={e11.get()}")
                con.commit()
                cur.execute('insert into bus values(?,?,?,?,?,?)',(int(e11.get()),str(e12.get()),int(e13.get()),int(e14.get()),int(e15.get()),int(e16.get())))
                con.commit()
        def fun():
            root.destroy()
            self.main_page()
        Button(root,text="EDIT",command=add2,bg="green",font='times 12').place(x=600,y=500)
        Button(root,text="ADD",command=add,bg="green",font='times 12').place(x=530,y=500)
        Button(root,text="SHOW",command=show,bg="green",font='times 12').place(x=670,y=500)
        Button(root,text="HOME",command=fun,bg="green",font='times 12').place(x=750,y=500)
        root.mainloop()
    def new_operator(self):
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root,text='Add Operator Details',fg='green',font='Calibri 20').pack()

        def show():
            Label(root,text="ALL BUS DETAILS",bg="red",fg="green",font='Calibri 15').place(x=650,y=450)
            cur.execute("select * from emp")
            Label(root,text=cur.fetchall(),font='times 11 bold').place(x=00,y=500)
        Label(root,text='Operator ID',font='times 11 bold').place(x=50,y=400)
        e11=Entry(root)
        e11.place(x=140,y=400)
        Label(root,text='Name',font='times 11 bold').place(x=280,y=400)
        e12=Entry(root)
        e12.place(x=330,y=400)
        Label(root,text='Address',font='times 11 bold').place(x=460,y=400)
        e13=Entry(root)
        e13.place(x=530,y=400)
        Label(root,text='Phone',font='times 11 bold').place(x=660,y=400)
        e14=Entry(root)
        e14.place(x=710,y=400)
        Label(root,text='Email',font='times 11 bold').place(x=840,y=400)
        e15=Entry(root)
        e15.place(x=890,y=400)
        def add():
            e100=e14.get()
            if(len(e100)!=10):
                showerror("error","insert correct number")
            else:

                showinfo("BUS ENTRY","OPERATOR ENTRY ADDED")
                cur.execute("create table if not exists emp(operator_id int,name varchar(20) ,address varchar(30),phone int,email varchar(30),primary key(operator_id))")
                cur.execute("insert into emp values (?,?,?,?,?)",(int(e11.get()),str(e12.get()),str(e13.get()),int(e14.get()),str(e15.get()))) 
                con.commit()        
        def add2():
                cur.execute(f"delete from emp where operator_id={e11.get()}")
                con.commit()
                cur.execute('insert into emp values(?,?,?,?,?)',(int(e11.get()),str(e12.get()),str(e13.get()),int(e14.get()),str(e15.get())))
                con.commit()
        def fun():
            root.destroy()
            self.main_page()
        Button(root,text="EDIT",command=add2,bg="green",font='times 10').place(x=1090,y=400)
        Button(root,text="ADD",command=add,bg="green",font='times 10').place(x=1040,y=400)
        Button(root,text="SHOW",command=show,bg="green",font='times 10').place(x=1140,y=400)
        Button(root,text="HOME",command=fun,bg="green",font='times 10').place(x=1200,y=400)
        root.mainloop()
    def new_route(self):
        import sqlite3
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root,text='Add Bus Route Details',fg='green',font='Calibri 20').pack()
        def add():
            showinfo("BUS ENTRY","BUS ROUTE ENTRY ADDED")
            cur.execute("create table if not exists route(route_id int,station_name varchar(20) ,station varchar(20),primary key(route_id))")
            cur.execute("insert into route values (?,?,?)",(int(e11.get()),str(e12.get()),str(e13.get()))) 
            con.commit()
        def show():
            Label(root,text="ALL BUS ROUTE DETAILS",bg="red",fg="green",font='Calibri 15').place(x=650,y=450)
            cur.execute("select * from route")
            Label(root,text=cur.fetchall(),font='times 12 bold').place(x=00,y=500)
        Label(root,text='Route Id',font='times 11 bold').place(x=200,y=400)
        e11=Entry(root)
        e11.place(x=270,y=400)
        Label(root,text='Starting Station Name',font='times 11 bold').place(x=410,y=400)
        e12=Entry(root)
        e12.place(x=600,y=400)
        Label(root,text='Ending Station Name',font='times 11 bold').place(x=740,y=400)
        e13=Entry(root)
        e13.place(x=880,y=400)
        def add2():
                cur.execute(f"delete from route where route_id={e11.get()}")
                con.commit()
                cur.execute('insert into route values(?,?,?)',(int(e11.get()),str(e12.get()),str(e13.get())))
                con.commit()
        def fun():
            root.destroy()
            self.main_page()
        Button(root,text="EDIT",command=add2,bg="green",font='times 10').place(x=1020,y=400)
        Button(root,text="ADD",command=add,bg="green",font='times 10').place(x=970,y=400)
        Button(root,text="SHOW",command=show,bg="green",font='times 10').place(x=1090,y=400)
        Button(root,text="HOME",command=fun,bg="green",font='times 10').place(x=1150,y=400)
        root.mainloop()
    def new_run(self):
        import sqlite3
        con = sqlite3.Connection("my_datbase")
        cur = con.cursor()
        root=Tk()
        root.title("booking")
        root.geometry("2000x2000")
        img=PhotoImage(file = "starbus.png")
        Label(root, image = img).pack()
        Label(root,text='Online Bus Booking System',fg='red',bg="light blue",font='Calibri 30').pack()
        Label(root,text='Add Bus Running Details',fg='green',font='Calibri 20').pack()
        def add():
            showinfo("BUS ENTRY","BUS RUNNING DETAIL ADDED")
            cur.execute("create table if not exists run (bus_id int,running_date date ,seat_available int,foreign key(bus_id) references bus(bus_id))")
            cur.execute("insert into run values (?,?,?)",(int(e11.get()),str(e12.get()),int(e13.get()))) 
            con.commit()
        def show():
            Label(root,text="ALL BUS RUNNING DETAILS",bg="red",fg="green",font='Calibri 15').place(x=650,y=450)
            cur.execute("select * from run")
            Label(root,text=cur.fetchall(),font='times 12 bold').place(x=00,y=500)
        Label(root,text='Bus Id ',font='times 12 bold').place(x=220,y=400)
        e11=Entry(root)
        e11.place(x=270,y=400)
        Label(root,text='Running date',font='times 12 bold').place(x=420,y=400)
        e12=Entry(root)
        e12.place(x=520,y=400)
        Label(root,text='Seat available',font='times 12 bold').place(x=660,y=400)
        e13=Entry(root)
        e13.place(x=760,y=400)
        def add2():
                cur.execute(f"delete from run where bus_id={e11.get()}")
                con.commit()
                cur.execute('insert into run values(?,?,?)',(int(e11.get()),str(e12.get()),int(e13.get())))
                con.commit()
        def fun():
            root.destroy()
            self.main_page()
        Button(root,text="EDIT",command=add2,bg="green",font='times 10').place(x=960,y=400)
        Button(root,text="ADD",command=add,bg="green",font='times 10').place(x=900,y=400)
        Button(root,text="SHOW",command=show,bg="green",font='times 10').place(x=1020,y=400)
        Button(root,text="HOME",command=fun,bg="green",font='times 10').place(x=1080,y=400)
        root.mainloop()
d=Bus()
d.front_page()
